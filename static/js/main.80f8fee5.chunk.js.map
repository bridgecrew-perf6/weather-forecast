{"version":3,"sources":["components/DayCard.js","components/SearchBox.js","components/beginPage.js","containers/WeekContainer.js","ApiKeys.js","App.js","reportWebVitals.js","index.js"],"names":["moment","require","DayCard","reading","date","Date","weekDay","dt","setTime","weatheImageURL","weather","id","className","format","Math","round","main","temp","description","SearchBox","searchChange","rel","href","onSubmit","name","type","placeholder","class","beginPage","WeekContainer","getWeatherAPI","e","a","preventDefault","city","target","elements","value","weatherAPIURL","fetch","then","res","json","data","dailyData","list","filter","dt_txt","includes","setState","fullData","searchfield","console","log","state","formatDayCards","map","i","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sRAGIA,G,MAASC,EAAQ,KAyBNC,EAvBC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACVC,EAAO,IAAIC,KACTC,EAAuB,IAAbH,EAAQI,GACxBH,EAAKI,QAAQF,GAEb,IAAMG,EAAc,kBAAcN,EAAQO,QAAQ,GAAGC,GAAjC,WAEpB,OACQ,qBAAKC,UAAU,8BAAf,SACA,sBAAKA,UAAU,uDAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BZ,EAAOI,GAAMS,OAAO,UAC/C,4BAAIb,EAAOI,GAAMS,OAAO,qBACxB,mBAAGD,UAAWH,IACd,+BAAKK,KAAKC,MAAMZ,EAAQa,KAAKC,MAA7B,YACA,qBAAKL,UAAU,YAAf,SACI,mBAAGA,UAAU,YAAb,SAA0BT,EAAQO,QAAQ,GAAGQ,sBCAlDC,G,MAlBG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,iCACI,sBAAMC,IAAI,aAAaC,KAAK,uFAC5B,uBAAMV,UAAU,KAAKW,SAAUH,EAA/B,UACA,uBACAR,UAAU,mBACVY,KAAK,OACLC,KAAK,SACLC,YAAY,mBAEZ,wBAAQd,UAAU,uBAAlB,SAAyC,mBAAGe,MAAM,2BCF/CC,EAVG,WACd,OACI,8BACI,oBAAIhB,UAAU,KAAd,2DCgEGiB,E,kDA7DX,aAAc,IAAD,8BACT,gBAQJC,cATa,uCASG,WAAMC,GAAN,iBAAAC,EAAA,sDACRD,EAAEE,kBACIC,EAAOH,EAAEI,OAAOC,SAASF,KAAKG,QAE5BC,EADA,4DACqEJ,EADrE,+BCpBa,oCDsBjBK,MAAMD,GACLE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMC,EAAYD,EAAKE,KAAKC,QAAO,SAAA3C,GAAO,OAAIA,EAAQ4C,OAAOC,SAAS,eACrE,EAAKC,SAAS,CACVC,SAAUP,EAAKE,KACfD,UAAWA,EACXO,YAAajB,IACd,kBAAMkB,QAAQC,IAAI,EAAKC,cAG/BF,QAAQC,IAAI,WAhBR,2CATH,wDA6BbE,eAAiB,WACb,OACI,EAAKD,MAAMV,UAAUY,KAAI,SAACrD,EAASsD,GAAV,OAAgB,cAAC,EAAD,CAAStD,QAAWA,GAAgBsD,OA7BjF,EAAKH,MAAQ,CACTJ,SAAU,GACVN,UAAW,GACXO,YAAa,IALR,E,qDAoCT,OAAGO,KAAKJ,MAAMH,YAEN,sBAAKvC,UAAU,UAAf,UACI,oBAAIA,UAAU,WAAd,8BACA,cAAC,EAAD,CAAWQ,aAAgBsC,KAAK5B,gBAChC,oBAAIlB,UAAU,cAAd,SAA6B8C,KAAKJ,MAAMH,cACvCO,KAAKH,iBACN,wBAAQ3C,UAAU,KAAlB,4DAKJ,sBAAKA,UAAU,UAAf,UACI,oBAAIA,UAAU,WAAd,8BACA,cAAC,EAAD,CAAWQ,aAAgBsC,KAAK5B,gBAChC,oBAAIlB,UAAU,cAAd,SAA6B8C,KAAKJ,MAAMH,cACxC,cAAC,EAAD,IACA,wBAAQvC,UAAU,KAAlB,gE,GAtDQ+C,aEObC,E,uKATP,OACI,qBAAKhD,UAAU,SAAf,SACI,cAAC,EAAD,U,GAJE+C,aCSHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAG1BX,M","file":"static/js/main.80f8fee5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DayCardStyle.css';\r\n\r\nvar moment = require('moment');\r\n\r\nconst DayCard = ({reading}) => {\r\n    let date = new Date();\r\n    const weekDay = reading.dt * 1000\r\n    date.setTime(weekDay)\r\n\r\n    const weatheImageURL = `owf owf-${reading.weather[0].id} owf-5x`;\r\n\r\n    return(  \r\n            <div className='tc dib br3 pa3 ma2 grow bw2'>\r\n            <div className='card ba tc dib br3 pa3 ma2 grow bw1 shadow-5 dayCard'>\r\n                <h3 className='cardTitle'>{moment(date).format('dddd')}</h3>\r\n                <p>{moment(date).format('MMMM Do, h:mm a')}</p>\r\n                <i className={weatheImageURL}></i>\r\n                <h2>{Math.round(reading.main.temp)} &deg;C</h2>\r\n                <div className='card-body'>\r\n                    <p className='card-text'>{reading.weather[0].description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                  \r\n    )\r\n}\r\n\r\nexport default DayCard;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\r\n    return(\r\n        <html>\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n            <form className='tc' onSubmit={searchChange}>\r\n            <input \r\n            className='ba3 pa2 b--white'\r\n            name='city'\r\n            type='search'\r\n            placeholder='Search city...'\r\n            />\r\n            <button className='ba3 pa2 ma2 b--white'><i class=\"fa fa-search\"></i></button>\r\n        </form>\r\n        </html>\r\n        \r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst beginPage = () => {\r\n    return(\r\n        <div>\r\n            <h1 className='tc'>   \r\n                Enter a city to check the weather forecast\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default beginPage;","import React, {Component} from 'react';\r\nimport DayCard from '../components/DayCard';\r\nimport './WeekContainerStyle.css'\r\nimport SearchBox from '../components/SearchBox';\r\nimport BeginPage from '../components/beginPage';\r\nimport {openWeatherMapAPI} from '../ApiKeys';\r\n\r\nclass WeekContainer extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            fullData: [],\r\n            dailyData: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    getWeatherAPI = async(e) => {\r\n            e.preventDefault();\r\n            const city = e.target.elements.city.value\r\n            if(city){\r\n                var weatherAPIURL = `http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${openWeatherMapAPI}`;\r\n                fetch(weatherAPIURL)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\")) \r\n                     this.setState({\r\n                         fullData: data.list,\r\n                         dailyData: dailyData,\r\n                         searchfield: city\r\n                     }, () => console.log(this.state))\r\n                })     \r\n            }else{\r\n                console.log('no city')\r\n            }\r\n    }\r\n\r\n    formatDayCards = () => {\r\n        return(\r\n            this.state.dailyData.map((reading, i) => <DayCard reading = {reading} key = {i}/>)\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.state.searchfield){\r\n            return(      \r\n                <div className='example'>   \r\n                    <h1 className='tc title'>Weather Forecast</h1>\r\n                    <SearchBox searchChange = {this.getWeatherAPI}/>\r\n                    <h3 className='tc cityname'>{this.state.searchfield}</h3>\r\n                    {this.formatDayCards()}\r\n                    <footer className='tc'>Weather forecast created by Nikola Georgiev</footer>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className='example'>   \r\n                    <h1 className='tc title'>Weather Forecast</h1>\r\n                    <SearchBox searchChange = {this.getWeatherAPI}/>\r\n                    <h3 className='tc cityname'>{this.state.searchfield}</h3>\r\n                    <BeginPage/>\r\n                    <footer className='tc'>Weather forecast created by Nikola Georgiev</footer>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default WeekContainer;\r\n","export const openWeatherMapAPI = '48f03e9a552bc9d2ac15755691345280';","import React, { Component } from 'react';\r\nimport WeekContainer from './containers/WeekContainer';\r\n\r\nclass App extends Component{\r\n    render(){\r\n        return(\r\n            <div className='AppDiv'>\r\n                <WeekContainer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}